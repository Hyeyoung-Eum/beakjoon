1.int 자료형 데이터의 개수에 따른 메모리 사용량
    1,000   = 약 4KB
    1M 백만  = 약 4MB
    10M 천만 = 약 40MB

2. 리스트를 여러개 선언하고, 그 중에서 크기가 1,000 이상인 리스트가 있다면
메모리 용량 제한으로 문제를 풀 수 없는 경우도 있다는 점을 기억하자.

3. 일반적으로 1초이고 데이터가 백만 개이면, O(NlogN) 이내 알고리즘으로 해결해야한다.

4. 보통 구현 유형의 문제는 사소한 입력 조건 등을 문제에서 명시해주며, 문제의 길이가 꽤 긴 편이다.
고차원적인 사고력 문제를 요구하지는 않으므로, 오히려 쉽게 풀 수 있다.
C/C++/JAVA로 풀 때 구현 문제가 조금 더 어려울 수 있다.
큰 정수를 처리하는 라이브러리를 별도로 사용해야하기 때문이다. 하지만 Python은 문법만 알아도 쉽게 해결 가능하다.

5. 완전탐색 : 전체 데이터의 수가 100만 개 이하일 때 사용하는 것이 일반적으로 적절하다.

6. 왕실의나이트 - 예외 케이스가 너무 많을 때는, 계산을 나눠서하는게 아니라 일단 계산을 모두 끝낸 후 결과가 유효한 값을 가지는지 판단한다.

7. 상하좌우, 왕실의 나이트 - 게임의 규칙이 일정하게 존재한다면, 게임의 룰을 리스트에 담아서 관리 가능.